name: Build Native
on:
  workflow_dispatch:
    inputs: {}
#  schedule:
#    - cron: '0 0 * * *'
env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: osx-x64, os: macos-latest, flags: -GNinja -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.14 }
          - { name: win-x64,     os: windows-latest, flags: -A x64 }
          - { name: win-x86,     os: windows-latest, flags: -A Win32 }
          - { name: win-arm64,   os: windows-latest, flags: -A ARM64 }
          - { name: linux-x64,   os: ubuntu-20.04,   flags: -GNinja, target_apt_arch: ":amd64"}
          - { name: linux-x86,   os: ubuntu-20.04,   flags: -GNinja -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32", target_apt_arch: ":i386" }
          - { name: linux-arm64, os: ubuntu-20.04,   flags: -GNinja, target_apt_arch: ":arm64", container: arm64v8/ubuntu }
          - { name: linux-arm,   os: ubuntu-20.04,   flags: -GNinja, target_apt_arch: ":armhf", container: arm32v7/ubuntu }
          - { name: osx-x64,     os: macos-latest,   flags: -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.14 }
          # NOTE: macOS 11.0 is the first released supported by Apple Silicon.
          - { name: osx-arm64, os: macos-latest, flags: -GNinja -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 }
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'libsdl-org/SDL'
          ref: 'main'

      - uses: actions/checkout@v4
        with:
          path: 'SDL3-CS'

      - name: Set up QEMU
        if: contains(matrix.platform.container, 'arm')
        uses: docker/setup-qemu-action@v3

      - name: Build (Linux ARM)
        if: contains(matrix.platform.container, 'arm')
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.platform.container }}
          options: >
            -v ${{ github.workspace }}:/workspace
            -e NAME=${{ matrix.platform.name }}
            -e TARGET_APT_ARCH=${{ matrix.platform.target_apt_arch }}
            -e RUNNER_OS=${{ runner.os }}
            -e FLAGS=${{ matrix.platform.flags }}
            -e BUILD_TYPE=${{ env.BUILD_TYPE }}
          run: |
            cd /workspace
            ./SDL3-CS/build.sh

      - name: Build
        if: ${{ !contains(matrix.platform.container, 'arm') }}
        env:
          NAME: ${{ matrix.platform.name }}
          TARGET_APT_ARCH: ${{ matrix.platform.target_apt_arch }}
          RUNNER_OS: ${{ runner.os }}
          FLAGS: ${{ matrix.platform.flags }}
        run: ./SDL3-CS/build.sh
      
      - name: Get Actions user id
        if: runner.os == 'Linux'
        id: get_uid
        run: echo "uid=$(id -u $USER)" >> $GITHUB_OUTPUT

      - name: Correct Ownership in GITHUB_WORKSPACE directory
        if: runner.os == 'Linux'
        uses: peter-murray/reset-workspace-ownership-action@v1
        with:
          user_id: ${{ steps.get_uid.outputs.uid }}

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: Update ${{ matrix.platform.name }} SDL binaries
          title: Update ${{ matrix.platform.name }} SDL binaries
          body: This PR has been auto-generated to update the ${{ matrix.platform.name }} SDL binaries.
          branch: update-${{ matrix.platform.name }}-binaries
          path: 'SDL3-CS'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'